################################################################################
# Randomisation methods
################################################################################
1. randomfunx==circular2
genome=hg19, mask=2011 blacklist U centromere, function=regioneR::circularRandomizeRegions
The randomised regions per chr have at maximum 45% of its ranges overlapping with 
masked areas. The original function from regioneR reports number of randomised
regions overlapping not the actual length of overlap so I modified and renamed
the function as circularRandomizeRegions2(). The new function reports percentage
of overlapping bases relative to the total width (number of bases) of the
set of randomised regions. I also modified the C1_associate code to restrict the
background regions to only those that formed a long-range contact (HiCAll). 
I did this by supplying the whole genome as genome but used the difference
between genome and HiCAll as mask. 
But with this the overlap with mask can still reach more than 50% (esp the case 
for chr21, could also be because randomisation is done per chr).
The regioneR::circularRandomizeRegions was chosen because it maintains the widths,
interval distance and order of original regions. It only rotates the original
regions around the chr. But because of th significant overlap with the mask
we need to rethink the randomisation strategy. 

2. randomfunx==random
Use regioneR::randomizeRegions(A, genome=genome, mask=mask, per.chromosome=TRUE, 
allow.overlaps=FALSE). Mask will be the difference between genome and HiCAll.

3. randomfunx==resample
I can use the regioneR::resample function that samples the HiCAll regions, 
returning the same number of ranges as in the original set. Sampling will be done
without replacement and per chr. This method will not retain the interval distance 
but the length will mostly be the same (equal to Hi-C resolution) except when 
the edge of chr is drawn. It is highly unlikely though that the edge of a chr 
participates in a contact in our dataset (largely due to the fact that it is hard 
to sequence the ends of chr). 
################################################################################
