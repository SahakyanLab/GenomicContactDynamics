Loading R-cbrg/current
  Loading requirement: gsl/2.6 hdf5/1.10.7

R version 4.0.1 (2020-06-06) -- "See Things Now"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ################################################################################
> # Plot:
> # a. Total mutations per ID_SAMPLE in the dataset. Also calculates the mean and
> # median of the total mutations per sample and the number of unique ID_SAMPLE.
> # b. Total mutations per nucleotide site per chromosome. Make plot for all and 
> # each mutation type (e.g. A>C). 
> ################################################################################
> # FLAGS * FLAGS * FLAGS * FLAGS * FLAGS * FLAGS * FLAGS * FLAGS * FLAGS * FLAGS
> ### DIRECTORY STRUCTURE ########################################################
> whorunsit = "LiezelCluster"  # "LiezelMac", "LiezelCluster", "LiezelLinuxDesk",
> # "AlexMac", "AlexCluster"
> 
> # Expands warnings
> options(warn=1)
> 
> if( !is.null(whorunsit[1]) ){
+   # This can be expanded as needed ...
+   if(whorunsit == "LiezelMac"){
+     lib = "/Users/ltamon/DPhil/lib"
+     data.dir = "/Users/ltamon/Database"
+     wk.dir = "/Users/ltamon/DPhil/GenomicContactDynamics/19_Mutation_rates"
+   } else if(whorunsit == "LiezelCluster"){
+     lib = "/t1-data/user/ltamon/DPhil/lib"
+     data.dir = "/t1-data/user/ltamon/Database"
+     wk.dir = "/t1-data/user/ltamon/DPhil/GenomicContactDynamics/19_Mutation_rates"
+   } else {
+     stop("The supplied <whorunsit> option is not created in the script.", quote=FALSE)
+   }
+ }
> src.dir = paste0(wk.dir, "/out_filter")
> out.dir = paste0(wk.dir, "/out_mutPerSite")
> chrLenfile = paste0(data.dir, "/genome_info/Hsa_GRCh37_73_chr_info.txt")
> ### OTHER SETTINGS #############################################################
> src.id = "hg38ToHg19"
> chr.v = NULL
> bin.len = 40000
> ################################################################################
> # LIBRARIES & DEPENDENCIES * LIBRARIES & DEPENDENCIES * LIBRARIES & DEPENDENCIES 
> ################################################################################
> library(ggplot2)
> library(ggsci)
> ################################################################################
> # MAIN CODE * MAIN CODE * MAIN CODE * MAIN CODE * MAIN CODE * MAIN CODE *
> ################################################################################
> chrlen.df <- read.delim(file=chrLenfile, header=TRUE)
> 
> #load(file=paste0(src.dir, "/CosmicNCV_", src.id, "_final_2000.RData"))
> load(file=paste0(src.dir, "/CosmicNCV_", src.id, "_final.RData"))
> ncv.df <- ncv.df[,c("ID_SAMPLE", "chr", "start", "MUT")]
> 
> # Plot mutation per ID_SAMPLE
> ID_SAMPLE.len <- length(unique(ncv.df$ID_SAMPLE))
> tmp <- sort(ncv.df$ID_SAMPLE, decreasing=FALSE)
> x <- table(tmp)
> med <- median(x)
> men <- mean(x)
> tmp <- data.frame(ID_SAMPLE=as.character(tmp), stringsAsFactors=FALSE)
> p <- ggplot(data=tmp, aes(x=ID_SAMPLE)) + 
+   geom_bar() +
+   geom_hline(yintercept=med, linetype="dotted", color="red", size=2) +
+   geom_hline(yintercept=men, linetype="dotted", color="blue", size=2) +
+   labs(x="ID_SAMPLE", y="# Mut", 
+        title=paste0(src.id, "_", ID_SAMPLE.len, "uniqID_SAMPLE_med(red)=", med,
+                     "_mean(blue)=", men)) 
> ggsave(filename=paste0(out.dir, "/CosmicNCV_", src.id, "_final_mutPerSamp.pdf"),
+        height=10, width=10, plot=p)
> rm(tmp, ID_SAMPLE.len, med, men, p, x); gc()
           used (Mb) gc trigger  (Mb) max used  (Mb)
Ncells   694344 37.1    4997060 266.9  6246324 333.6
Vcells 11267099 86.0   41203062 314.4 64250961 490.2
> 
> #-------------------
> if( is.null(chr.v) ){ chr.v <- unique(ncv.df$chr) }
> for(chr in chr.v){
+   
+   chr.len <- chrlen.df$length.bp[chrlen.df$chromosome==chr]
+   
+   incl.TF <- ncv.df$chr==chr
+   
+   p <- ggplot(data=ncv.df[incl.TF, c("start", "MUT")], aes(x=start)) +
+     geom_bar(aes(fill=MUT)) +
+     scale_x_continuous(limits=c(1,chr.len)) +
+     scale_fill_npg() + 
+     labs(x="Position", y="# Mut", fill="Base", title=paste0(src.id, "_", chr)) 
+   
+   ggsave(filename=paste0(out.dir, "/", chr, "_CosmicNCV_", src.id, "_final_mutPerSite.pdf"),
+          height=10, width=20, plot=p)
+   
+   # Panel, per mutation type
+   p <- ggplot(data=ncv.df[incl.TF, c("start", "MUT")], aes(x=start)) +
+     geom_bar(aes(fill=MUT)) +
+     scale_x_continuous(limits=c(1,chr.len)) +
+     scale_fill_npg() + 
+     labs(x="Position", y="# Mut", fill="Base", title=paste0(src.id, "_", chr)) +
+     facet_grid(MUT~.)
+   
+   ggsave(filename=paste0(out.dir, "/", chr, "_CosmicNCV_", src.id, "_final_panel_mutPerSite.pdf"),
+          height=10, width=20, plot=p)
+   
+   ncv.df <- ncv.df[!incl.TF,]
+   rm(p, chr.len); gc()
+   print(paste0(chr, " done!"), quote=FALSE)
+   
+ }
[1] chr16 done!
[1] chr2 done!
[1] chr6 done!
[1] chr3 done!
[1] chr8 done!
[1] chr1 done!
[1] chr9 done!
[1] chr10 done!
[1] chr5 done!
[1] chr14 done!
[1] chr4 done!
[1] chr19 done!
[1] chr12 done!
[1] chr17 done!
[1] chr13 done!
[1] chr21 done!
[1] chr7 done!
[1] chr18 done!
[1] chr15 done!
[1] chr11 done!
[1] chr22 done!
[1] chr20 done!
> 
> # rm(list=ls()); gc()
> 
> 
