################################################################################
# LIBRARIES & DEPENDANCES * LIBRARIES & DEPENDANCIES * LIBRARIES & DEPENDANCES *
################################################################################
CosmicNCV.tsv
~Database/HiC_features_GSE87112_RAWpc/out_binBaseContent # Base content per bin
~Database/HiC_features_GSE87112_RAWpc/out_binWeightedMeanCp # weighted mean Cp

library(Hmisc)
library(hexbin)
library(viridis)
library(ggpubr)
library(data.table)
library(reshape2)

source(paste0(lib, "/makeHexbinggplot.R"))
source(paste0(lib, "/GG_bgr.R"))
################################################################################
# Cancer non-coding variants (NCV) from COSMIC (release v92, 27th August 2020)
################################################################################
COSMIC's definition of NCV:

Non-coding variants are usually defined by whole genome screening and occur 
either in the intronic regions of genes or in intergenic regions of the genome. 

v90 definition:
Mutations that lie within an intergenic region of the genome. These are identified 
with a genomic identifier (COSV), a legacymutation identifier (COSM or COSN).

They are annotated using syntax derived from HGVS nomenclature recommendations 
[http://www.hgvs.org/mutnomen/].

The 'g.' format of the syntax denotes genomic coordinates, eg chr19:g.34210730C>T 
which is a C to T substitution at nucleotide 34,210,730 on chromosome 19.
################################################################################
# A. Finalise non-coding mutation data set
################################################################################
1. Explore COSMIC non-coding mutation data. Did the following:
a. Extract sample dataset -- first 2000 columns of the table.
b. Explore possible entries per table column. Calculate starting total number
of mutations.
- Check if duplicated GENOMIC_MUTATION_ID correspond to duplicated LEGACY_MUTATION_ID.
- Zygosity - We don't care because our contacts are not stranded.

c. Check how many entries with multiple mutations at the same site to be removed. 
These are entries with the same sample id (or sample name) and same location of mutation. 

ID_SAMPLE - Need alternative to ID_SAMPLE because a sample can have multiple ids, 
if the same sample has been entered into the database multiple times from different 
papers. The alternative is a CUSTOM ID made by concatenating the following columns:
Primary site, Site subtype 1, Site subtype 2, Site subtype 3, Primary histology,
Histology subtype 1, Histology subtype 2 and Histology subtype 3. 

The code removes entries with duplicated (a) ID_SAMPLE-genome position, 
(b) CUSTOM ID-genome position and (c) Sample_name-genome position. 

d. The genomic mutation identifier (COSV), GENOMIC_MUTATION_ID, indicates the 
definitive position of the variant on the genome so check for samples with the same 
GENOMIC_MUTATION_ID but different genomic position. Note that entries can have
the same GENOMIC_MUTATION_ID but should be from different samples. There should
be no entry with the same GENOMIC_MUTATION_ID from the same sample if
entries from same sample and same position are removed (c). 

2. Apply filtering based on checks done in (1), liftover to hg19 and conversion 
to 1-based coordinate system to get the final non-coding mutation working dataset. 

a. Check for NAs per column.
b. Extract chr, start, end coordinate from genome position. Convert 0-based 
coordinates to 1-based.
c. Liftover to hg19 if required. Remove mutations that were split after liftover
(from single base to two or more).
d. Filter:
- Remove entries with the multiple mutations at same site. Use only ID_SAMPLE and
Sample name for this. Custom id was not used because the columns used to make it 
mostly contain NS (not specified).
- Remove entries with same GENOMIC_MUTATION_ID but different position.
- Mutation somatic status - Take only mutations that were confirmed to be somatic
Confirmed Somatic = if the mutation has been confimed to be somatic in the 
experiment by sequencing both the tumour and a matched normal from the same patient.
- Check if WT_SEQ and MUT_SEQ only contain valid bases (upper and lower case
but the data only uses upper case).
- Only take entries with single base mutation (start and end coorindates the same).
- Only take mutations from autosomal chromosomes (chr1-22). 
- Only take mutations found from whole genome sequencing experiments. Note that some
entries are "n" for both whole genome and whole exome sequencing. I only took entries
that yes/y for whole genome and no/n for whole exome. 
- Convert 
ncv.df$MUT[ncv.df$MUT=="T>G"] <- "A>C"
ncv.df$MUT[ncv.df$MUT=="T>C"] <- "A>G"
ncv.df$MUT[ncv.df$MUT=="T>A"] <- "A>T"
ncv.df$MUT[ncv.df$MUT=="G>T"] <- "C>A"
ncv.df$MUT[ncv.df$MUT=="G>C"] <- "C>G"
ncv.df$MUT[ncv.df$MUT=="G>A"] <- "C>T"
- Made sure that there are no problematic WT_SEQ and MUT_SEQ (e.g. missing or >1 bp). 
I checked that mutation types can only be one of the 6 possibilities above.

No filtering against variants that are SNPs (~60K entries in the hg38ToHg19 CosmicNCV
dataset). 
For subsequent test runs, a sample dataset (first 2000 entries) were extracted from
the final filtered dataset. 

e. Additional possible filtering (not applied):
- SNP - choose "n"
All the known SNPs are flagged as 'y' defined by the 1000 genomes project, dbSNP 
and a panel of 378 normal (non-cancer) samples from Sanger CGP sequencing.

- FATHMM_MKL_NON_CODING_SCORE - Get mutations that are considered pathogenic
(>=0.7)
- some are missing
"Scores above 0.5 are deleterious, but in order to highlight the most significant 
data in COSMIC, only scores ≥ 0.7 are classified as 'Pathogenic'. Mutations are 
classed as 'Neutral' if the score is ≤ 0.5."
https://cancer.sanger.ac.uk/cosmic/analyses

- FATHMM_MKL_NON_CODING_GROUPS 
Each functional score is classified into 10 groups of features, depending on 
whether it is a coding or non-coding variant. Please see the original publication 
for more details regarding the feature classification (doi:10.1093/bioinformatics/btv009).

3.  Make sure that per sample, each site has only 1 or no mutation. 

4. Plot:
a. Total mutations per ID_SAMPLE in the dataset. Also calculates the mean and
median of the total mutations per sample and the number of unique ID_SAMPLE.
b. Total mutations per nucleotide site per chromosome. Make plot for all and each
mutation type (e.g. A>C). 

Number of mutations per nucleotide site. Also calculates number of unique
ID_SAMPLE and the mean and mode of mutations. 
################################################################################
# B. Mutations per nucleotide site of a bin
################################################################################
1. Mutation frequency per nucleotide site in a bin (done per chr). Output is
FETA.MX.
2. Merge FETA.MX from all chr.
3. Consolidate data from FETA.MX into Cp categories. Only contacting bins 
present in given cell line / tissue were considered. Output is FETACP.MX which
contains number of nucleotide site per Cp with at least one mutation.
4. Count nucleotide site considered per bin. 
5. Plot number of mutated site across Cp and number of mutations per site for
all Cp=21 bins. 
################################################################################
# C. Mutations per bin
################################################################################
1. Take mutation file, assign mutated sites to bin and then calculate per bin

a. Tmut - number of mutations 
b. Nmsite - number of mutated sites (in at least one sample in the cosmic data)
c. TmutDIVNmsite - Tmut/Nmsite
d. Nmsitenorm - Nmsite/number of wildtype base in the bin 
	- Example for A>C, divide by the number of As in the bin
	- Nmsitenorm missing values correspond to bins with missing A,C,G,T content
	because they have Ns in their sequence
	- For mut=='All' (all mutation types), out_WT_SEQ_nUMChar contains result
	considering all bins regardless if there are missing base or none. The bin
	length is used for normalisation because although there are missing bases,
	they can only be of the 4 bases and will always be included in the sum. 
	The out_WT_SEQ_rowSum contains results ignoring bins with missing bases
	as in other mutation types. 

See ~/GCD_polished/2_Expl_contacts for script calculating base content per bin.

Results from this directories vary by the calculation of Nmsitenorm for 'All'
mutation types:
a. WT_SEQ_numUMChar - Nmsitenorm generated by normalising to nUMChar in BINKMER.MX.
This includes bins with at least one N. 
b. WT_SEQ_rowSum - Nmsitenorm generateed by normalising to the sum of A, T, C and G.
Since A, T, C and G are NAs when there's at least one N in sequence, this excludes
bins with at least one N. I prefered this because this bins are also ignore in other
analyses like complementarity vs. Cp etc.
	
2. Table of Tmut, Nmsite, TmutDIVNmsite and Nmsitenorm per bin. Indicate also which
Cp/s the bin belongs to. Using this table make boxplots of the 4 calculations in C1 
per Cp.

> head(MUTCP.DF)
    chr bins mutbin Tmut Nmsite TmutDIVNmsite Nmsitenorm 1 2 3 4 5 6 7 8 9 10
1 chr16    1      0    0      0      0.000000   0.000000 0 0 0 0 0 0 0 0 0  0
2 chr16    2      1   30     30      1.000000   0.000750 1 1 1 1 0 1 0 0 0  0
3 chr16    3      1   52     48      1.083333   0.001200 1 1 1 1 1 1 1 1 1  1
4 chr16    4      1   31     30      1.033333   0.000750 1 1 1 1 1 1 1 1 1  1
5 chr16    5      1   11     11      1.000000   0.000275 1 1 1 1 1 1 1 1 1  1
6 chr16    6      1   35     35      1.000000   0.000875 1 1 1 1 1 1 1 1 1  0
  11 12 13 14 15 16 17 18 19 20 21
1  0  0  0  0  0  0  0  0  0  0  0
2  0  0  0  0  0  0  0  0  0  0  0
3  1  0  0  1  1  0  0  0  0  0  0
4  1  1  1  1  1  1  0  0  0  0  0
5  1  1  1  1  0  1  0  0  0  0  0
6  0  0  0  0  0  0  0  0  0  0  0

All bins involved in long-range contacts were considered. Plot title contains: 
(i) number of contributing bins per Cp
(ii) number of bins per Cp with at least one mutated site and (iii) the percentage of (ii) 
relative to (i). 

3. Take MUTCP.DF from C2 to quantify significance of mutation calculations per Cp 
relative to Cp=1. Mann-whitney test for (using R function wilcox.text()) for 
Independent samples is done. Alternative hypothesis is decided based on mean and
Median of distributions being compared. Greater means mean/median greater than
The mean/median of Cp=1 values. Two-sided is used when values are equal. Results 
of test presented as scatter plots Of mean/median of mutation calculation per Cp. 
alpha set to 0.05. 

4. Hexbin plot Tmut, Nmsite, TmutDIVNmsite and Nmsitenorm vs. weighted mean Cp 
with (wmeanCp0) and without (wmeanCp) considering Cp=0 long-range contacts. 
See ~/GCD_polished/2_Expl_contacts for script calculating weighted mean Cp.

5. Split the weighted mean Cp values into intervals (overlapping and non-overlapping)
And then plot the mutation calculation per interval as boxplot and scatterplot of mean/median
With significance quantified using Mann-Whitney test (same as in C3).

a. split=BIN (non-overlapping intervals)
- percPerBp argument - set percentage of data in each boxplot, only applicable 
to split="BIN"

b. split=SLIDE (overlapping intervals)

Both boxplot and scatter plot contain number of bins per interval. Also contains
Number of unique valid bins to calculate number of bin per box given perPerBp.
################################################################################
